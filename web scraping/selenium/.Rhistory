} else if (y == 7) {
cat("Loss")
break
}}
}
x = sum(sample(1:6,2, replace = T))
if (x == 7 | x == 11) {cat("Win")
} else if (x == 2 | x == 3 | x == 12) {cat("Loss")
} else {
while (TRUE) {
y = sum(sample(1:6), 2, replace = T)
if (y == x) {
cat ("Win")
break
} else if (y == 7) {
cat("Loss")
break
}}
}
x = sum(sample(1:6,2, replace = T))
if (x == 7 | x == 11) {cat("Win")
} else if (x == 2 | x == 3 | x == 12) {cat("Loss")
} else {
while (TRUE) {
y = sum(sample(1:6), 2, replace = T)
if (y == x) {
cat ("Win")
break
} else if (y == 7) {
cat("Loss")
break
}}
}
x = sum(sample(1:6,2, replace = T))
if (x == 7 | x == 11) {cat("Win")
} else if (x == 2 | x == 3 | x == 12) {cat("Loss")
} else {
while (TRUE) {
y = sum(sample(1:6), 2, replace = T)
if (y == x) {
cat ("Win")
break
} else if (y == 7) {
cat("Loss")
break
}}
}
x = sum(sample(1:6,2, replace = T))
if (x == 7 | x == 11) {cat("Win")
} else if (x == 2 | x == 3 | x == 12) {cat("Loss")
} else {
while (TRUE) {
y = sum(sample(1:6), 2, replace = T)
if (y == x) {
cat ("Win")
break
} else if (y == 7) {
cat("Loss")
break
}}
}
x = sum(sample(1:6,2, replace = T))
if (x == 7 | x == 11) {cat("Win")
} else if (x == 2 | x == 3 | x == 12) {cat("Loss")
} else {
while (TRUE) {
y = sum(sample(1:6), 2, replace = T)
if (y == x) {
cat ("Win")
break
} else if (y == 7) {
cat("Loss")
break
}}
}
x = sum(sample(1:6,2, replace = T))
if (x == 7 | x == 11) {cat("Win")
} else if (x == 2 | x == 3 | x == 12) {cat("Loss")
} else { y = sum(sample(1:6),x, replace = T)
while (TRUE) {
if (y == x) {
cat ("Win")
break
} else if (y == 7) {
cat("Loss")
break
}}
}
?sample
data("iris")
head(iris)
library(dplyr)
group_by(iris,Sepal.Length,Species)
summarise(group_by(iris,Sepal.Length,Species),addbitches=sum(Petal.Width))
install.packages('shiny')
shiny::runApp('Desktop/ningxi')
runApp('Desktop/demo/ui.R')
runApp('Desktop/demo/ui.R')
runApp('Desktop/demo/ui.R')
runApp('Desktop/demo1')
runApp('Desktop/demo1')
runApp('Desktop/demo1')
runApp('Desktop/demo1')
?hist
data("faithful")
head(faithful)
runApp('Desktop/demo1')
runApp('Documents/DSA/lecture notes/R/flights/flights')
runApp('Documents/DSA/lecture notes/R/flights/flights')
runApp('Documents/DSA/lecture notes/R/flights')
runApp('Documents/DSA/lecture notes/R/flights')
runApp('Documents/DSA/lecture notes/R/flights')
runApp('Documents/DSA/lecture notes/R/flights')
runApp('Documents/DSA/lecture notes/R/flights')
runApp('Documents/DSA/lecture notes/R/flights')
runApp('Documents/DSA/lecture notes/R/flights')
runApp('Documents/DSA/lecture notes/R/flights')
head(flights)
runApp('Documents/DSA/lecture notes/R/flights')
runApp('Documents/DSA/lecture notes/R/flights')
runApp('Documents/DSA/lecture notes/R/flights')
runApp('Documents/DSA/lecture notes/R/flights')
?unique
runApp('Documents/DSA/lecture notes/R/flights')
shiny::runApp('Documents/DSA/lecture notes/R/flights')
class(flights)
class(flights[origin])
class(flights[,origin])
flights(1,2)
flights[1,2]
flights[1,32]
flights[1,13]
?unique
class(unique(flights[,origin]))
unique(flights[,origin]))
unique(flights[,origin])
flights[,origin]
runApp('Documents/DSA/lecture notes/R/flights')
shiny::runApp('Documents/DSA/projects/shiny wine')
runApp('Documents/DSA/projects/shiny wine')
runApp('Documents/DSA/projects/shiny wine')
runApp('Documents/DSA/projects/shiny wine')
?geom_col
?scale_color_gradient
runApp('Documents/DSA/projects/shiny wine')
runApp('Documents/DSA/projects/shiny wine')
View(wine)
runApp('Documents/DSA/projects/shiny wine')
runApp('Documents/DSA/projects/shiny wine')
top=wine %>% group_by(country) %>% summarize(median=median(points)) %>% arrange(desc(median)) %>% top_n(21)
top=as.character(top$country)
toptopwineprice=wine %>% filter(variety %in% topwine) %>% group_by(variety)%>% summarize(median=median(points))
top
goodvalue = top[! %in% selected_countries]
goodvalue = top[%in% selected_countries]
goodvalue = setdiff(top, selected_countries)
goodvalue
goodvalue = setdiff(top, selected_countries,na.rm=TRUE)
goodvalue = goodvalue[ !is.na(goodvalue)]
goodvalue
goodvalue = setdiff(top, selected_countries)
is.na(goodvalue)
goodvalue = goodvalue[ != '']
goodvalue = goodvalue[goodvalue != '']
goodvalue
goodvalue = setdiff(top, selected_countries)
goodvalue = goodvalue[goodvalue != '']
runApp('Documents/DSA/projects/shiny wine')
wine %>% arrange(desc(points))
str(wine)
?quantile
wine %>% arrange(desc(points)) % quantile(prob = 0.9)
wine %>% arrange(desc(points)) % filter(points == quantile(prob = 0.9))
wine %>% arrange(desc(points)) % filter(points > quantile(points, prob = 0.9))
quantile(wine$points, prob = 0.9)
class(quantile(wine$points, prob = 0.9))
wine %>% arrange(desc(points)) %>% filter(points > quantile(points, prob = 0.9))
nrow(wine)
cheapest10percent=wine %>% arrange(price) %>% filter(price > quantile(price, prob = 0.1))
cheapest10percent=wine %>% arrange(price) %>% filter(price > quantile(price, prob = 0.1, na.rm= T))
nrow(top10percent)
top10percent=wine %>% arrange(desc(points)) %>% filter(points > quantile(points, prob = 0.9))
nrow(top10percent)
nrow(cheapest10percent)
cheapest10percent=wine %>% arrange(price) %>% filter(price > quantile(price, prob = 0.1, na.rm= T)) %>% top_n(nrow(top10percent))
cheapest10percent=wine %>% arrange(price) %>% filter(price > quantile(price, prob = 0.1, na.rm= T)) %>% top_n(10)
cheapest10percent=wine %>% arrange(price) %>% filter(price > quantile(price, prob = 0.1, na.rm= T))
head(cheapest10percent)
str(cheapest10percent)
cheapest10percent=wine %>% arrange(price) %>% filter(price > quantile(price, prob = 0.1, na.rm= T)) %>% top_n(5)
?top_n
cheapest10percent=wine %>% arrange(price) %>% filter(price > quantile(price, prob = 0.1, na.rm= T)) %>% top_n(5,wt=price)
cheapest10percent=wine %>% arrange(price) %>% filter(price > quantile(price, prob = 0.1, na.rm= T)) %>% top_n(nrow(top10percent),wt=price)
nrow(cheapest10percent)
nrow(top10percent)
cheapest10percent=wine %>% arrange(price) %>% filter(price > quantile(price, prob = 0.1, na.rm= T)) %>% top_n(nrow(top10percent),wt=price) %>% filter(nrow(top10percent))
wine %>% group_by(country) %>% summarise(count=n())
cheapest10percent=wine %>% arrange(price) %>% head(nrow(top10percent))
nrow(cheapest10percent)
nrow(top10percent)
goodvalue = intersect(top10percent,cheapest10percent)
goodvalue
top10percent=wine %>% arrange(desc(points)) %>% filter(points > quantile(points, prob = 0.80))
goodvalue
top10percent=wine %>% arrange(desc(points)) %>% filter(points > quantile(points, prob = 0.50))
goodvalue
nrow(cheapest10percent)
nrow(top10percent)
cheapest10percent=wine %>% arrange(price) %>% head(nrow(top10percent))
nrow(cheapest10percent)
nrow(top10percent)
goodvalue = intersect(top10percent,cheapest10percent)
goodvalue
top10percent=wine %>% arrange(desc(points)) %>% filter(points > quantile(points, prob = 0.80))
top10percent=wine %>% arrange(desc(points)) %>% filter(points > quantile(points, prob = 0.80))
goodvalue
top10percent=wine %>% arrange(desc(points)) %>% filter(points > quantile(points, prob = 0.90))
cheapest10percent=wine %>% arrange(price) %>% head(nrow(top10percent))
goodvalue = intersect(top10percent,cheapest10percent)
goodvalue
top10percent=wine %>% arrange(desc(points)) %>% filter(points > quantile(points, prob = 0.85))
cheapest10percent=wine %>% arrange(price) %>% head(nrow(top10percent))
goodvalue
goodvalue = intersect(top10percent,cheapest10percent)
nrow(top10percent)
nrow(cheapest10percent)
goodvalue = intersect(top10percent,cheapest10percent)
goodvalue
library(datasets)
head(HairEyeColor)
mosaicplot(HairEyeColor, shade = TRUE)
View(HairEyeColor)
class(HairEyeColor)
?mosaicplot
library(data.table)
datasets::HairEyeColor
class(HairEyeColor)
head(HairEyeColor)
library(dplyr)
HairEyeColor %>% filter(Sex=='Female')
str(HairEyeColor)
trimmed = HairEyeColor[,c('Brown','Blue'),'Female']
mosaicplot(trimmed,shade=T)
install.packages('MLR')
install.packages('mlr')
?mlr
library(mlr)
View(trimmed)
chisq.test(trimmed)
chisq.test(trimmed)$expected
shiny::runApp('Documents/DSA/projects/shiny wine')
goodvalue
str(goodvalue)
runApp('Documents/DSA/projects/shiny wine')
runApp('Documents/DSA/projects/shiny wine')
runApp('Documents/DSA/projects/shiny wine')
str(topwine)
runApp('Documents/DSA/projects/shiny wine')
runApp('Documents/DSA/projects/shiny wine')
?geom_col
runApp('Documents/DSA/projects/shiny wine')
runApp('Documents/DSA/projects/shiny wine')
runApp('Documents/DSA/projects/shiny wine')
runApp('Documents/DSA/projects/shiny wine')
topwine = wine %>% group_by(variety) %>% summarize(number=n()) %>% arrange(desc(number)) %>% top_n(12)
wine %>% filter(country == input$country) %>% group_by(province) %>% summarise(nprovince=n(),midpoint=median(points)) %>%
arrange(desc(nprovince)) %>% top_n(n=5,wt=nprovince)
wine %>% filter(country == input$country) %>% filter(variety %in% topwine)
topwine
runApp('Documents/DSA/projects/shiny wine')
runApp('Documents/DSA/projects/shiny wine')
runApp('Documents/DSA/projects/shiny wine')
runApp('Documents/DSA/projects/shiny wine')
runApp('Documents/DSA/projects/shiny wine')
runApp('Documents/DSA/projects/shiny wine')
runApp('Documents/DSA/projects/shiny wine')
runApp('Documents/DSA/projects/shiny wine')
runApp('Documents/DSA/projects/shiny wine')
runApp('Documents/DSA/projects/shiny wine')
runApp('Documents/DSA/projects/shiny wine')
runApp('Documents/DSA/projects/shiny wine')
runApp('Documents/DSA/projects/shiny wine')
runApp('Documents/DSA/projects/shiny wine')
runApp('Documents/DSA/projects/shiny wine')
runApp('Documents/DSA/projects/shiny wine')
runApp('Documents/DSA/projects/shiny wine')
runApp('Documents/DSA/projects/shiny wine')
shiny::runApp('Documents/DSA/projects/shiny wine')
runApp('Documents/DSA/projects/shiny wine')
runApp('Documents/DSA/projects/shiny wine')
shiny::runApp('Documents/DSA/projects/shiny_wine')
runApp('Documents/DSA/projects/shiny_wine')
runApp('Documents/DSA/projects/shiny_wine')
45*12
3900*14/30
shiny::runApp('Documents/DSA/projects/shiny_wine')
nrow(wine)
shiny::runApp('Documents/DSA/projects/shiny_wine')
getwd
library(readr)
dataset <- read_csv(NULL)
View(dataset)
setwd("~/Documents/DSA/projects/web scraping/selenium")
tripadvisor = read_csv('reviews.csv', StringsAsFactors=F)
tripadvisor = read_csv('reviews.csv')
View(tripadvisor)
View(tripadvisor)
tripadvisor$ranking=rownames(tripadvisor)
View(tripadvisor)
str(tripadvisor)
library(dplyr)
View(tripadvisor)
gsub(' reviews','',tripadvisor$num_reviews)
View(tripadvisor)
tripadvisor$num_reviews=gsub(' reviews','',tripadvisor$num_reviews)
View(tripadvisor)
class(tripadvisor$num_reviews)
as.numeric(tripadvisor$num_reviews)
tripadvisor$num_reviews=gsub(',','',gsub(' reviews','',tripadvisor$num_reviews))
as.numeric(tripadvisor$num_reviews)
View(tripadvisor)
tripadvisor$stars = gsub(' of 5 bubbles','',tripadvisor$stars) # remove unnecessary part out of column
View(tripadvisor)
tripadvisor$stars = as.numeric(gsub(' of 5 bubbles','',tripadvisor$stars)) # remove unnecessary part out of column
tripadvisor %>% group_by(price) %>% arrange()
str(tripadvisor)
tripadvisor$num_reviews = as.numeric(gsub(',','',gsub(' reviews','',tripadvisor$num_reviews))) # remove the word 'reviews' and comma in the string and convert to numeric
str(tripadvisor)
tripadvisor %>% group_by(cuisine) %>% count()
tripadvisor %>% group_by(price)
wine = read.csv('winemag-data_first150k.csv', stringsAsFactors = F)
library(dplyr)
wine = wine %>% select(-description)
setwd("~/Documents/DSA/projects/shiny/shiny_wine")
wine = read.csv('winemag-data_first150k.csv', stringsAsFactors = F)
library(dplyr)
wine = wine %>% select(-description)
selected_countries = wine %>% group_by(country) %>% summarise(count=n()) %>% arrange(desc(count)) %>% top_n(10) %>% select(country)
selected_countries = as.character(selected_countries$country)
wine %>% filter(country == 'Greece') %>% summarize(n())
wine %>% filter(country == 'Greece') %>% summarize(n())
wine %>% filter(country %in% selected_countries) %>% group_by(country) %>% summarize(median=median(points)) %>% arrange(desc(median))
wine %>% filter(country %in% selected_countries) %>% group_by(country) #%>% summarize(median=median(points)) %>% arrange(desc(median))
wine %>% filter(country %in% selected_countries) %>% group_by(country) #%>% summarize(median=median(points)) %>% arrange(desc(median))
wine %>% filter(country %in% selected_countries) %>% group_by(country) %>% summarize(median=median(points))
wine %>% filter(country %in% selected_countries)
tripadvisor %>% group_by(cuisine) %>% count() %>% ggplot(cuisine) + geom_bar # check which cuisines are most represented in the list
library(ggplot2)
tripadvisor %>% group_by(cuisine) %>% count() %>% ggplot(cuisine) + geom_bar # check which cuisines are most represented in the list
tripadvisor = read_csv('reviews.csv')
setwd("~/Documents/DSA/projects/web scraping/selenium")
tripadvisor = read_csv('reviews.csv')
tripadvisor$ranking = rownames(tripadvisor) # adding rankings as a new column
tripadvisor$num_reviews = as.numeric(gsub(',','',gsub(' reviews','',tripadvisor$num_reviews))) # remove the word 'reviews' and comma in the string and convert to numeric
tripadvisor$stars = as.numeric(gsub(' of 5 bubbles','',tripadvisor$stars)) # remove unnecessary part out of column and convert to numeric
tripadvisor %>% group_by(cuisine) %>% count() %>% ggplot(cuisine) + geom_bar # check which cuisines are most represented in the list
library(dplyr)
tripadvisor %>% group_by(cuisine) %>% count() %>% ggplot(cuisine) + geom_bar # check which cuisines are most represented in the list
tripadvisor = read_csv('reviews.csv', StringsasFactors=F)
View(tripadvisor)
names(tripadvisor)
tripadvisor %>% group_by(cuisine) %>% count() # %>% ggplot(cuisine) + geom_bar # check which cuisines are most represented in the list
tripadvisor %>% group_by(cuisine) %>% count() %>% ggplot(aes(cuisine)) + geom_bar # check which cuisines are most represented in the list
tripadvisor %>% group_by(cuisine) %>% count() %>% ggplot(aes(cuisine)) + geom_bar() # check which cuisines are most represented in the list
tripadvisor %>% group_by(cuisine) %>% count() %>% ggplot(aes(cuisine,n)) + geom_bar() # check which cuisines are most represented in the list
tripadvisor %>% group_by(cuisine) %>% count() %>% ggplot(aes(cuisine,n)) + geom_col() # check which cuisines are most represented in the list
tripadvisor %>% group_by(cuisine) %>% summarize(n) %>% ggplot(aes(cuisine,n)) + geom_col() # check which cuisines are most represented in the list
tripadvisor %>% group_by(cuisine) %>% summarize(n()) # %>% ggplot(aes(cuisine,n)) + geom_col() # check which cuisines are most represented in the list
tripadvisor %>% group_by(cuisine) %>% summarize(n=n()) %>% arrange(desc(n)) %>% top_n(10) %>% ggplot(aes(cuisine,n)) + geom_col() # check which cuisines are most represented in the list
tripadvisor %>% group_by(cuisine) %>% summarize(n=n()) %>% arrange(desc(n)) # %>% top_n(10) %>% ggplot(aes(cuisine,n)) + geom_col() # check which cuisines are most represented in the list
tripadvisor %>% group_by(cuisine) %>% summarize(n=n()) %>% arrange(desc(n), rm,na=T) # %>% top_n(10) %>% ggplot(aes(cuisine,n)) + geom_col() # check which cuisines are most represented in the list
tripadvisor %>% group_by(cuisine) %>% summarize(n=n()) %>% arrange(desc(n), rm.na=T) # %>% top_n(10) %>% ggplot(aes(cuisine,n)) + geom_col() # check which cuisines are most represented in the list
tripadvisor %>% group_by(cuisine) %>% summarize(n=n(),na.rm=T) %>% arrange(desc(n)) # %>% top_n(10) %>% ggplot(aes(cuisine,n)) + geom_col() # check which cuisines are most represented in the list
tripadvisor %>% group_by(cuisine,na.rm=T) %>% summarize(n=n()) %>% arrange(desc(n)) # %>% top_n(10) %>% ggplot(aes(cuisine,n)) + geom_col() # check which cuisines are most represented in the list
tripadvisor %>% group_by(cuisine) %>% na.omit() %>% summarize(n=n()) %>% arrange(desc(n)) # %>% top_n(10) %>% ggplot(aes(cuisine,n)) + geom_col() # check which cuisines are most represented in the list
tripadvisor %>% group_by(cuisine) %>% na.omit() %>% summarize(n=n()) %>% arrange(desc(n)) # %>% top_n(10) %>% ggplot(aes(cuisine,n)) + geom_col(fill=cuisine)
tripadvisor %>% group_by(cuisine) %>% na.omit() %>% summarize(n=n()) %>% arrange(desc(n)) %>% top_n(10) %>% ggplot(aes(cuisine,n)) + geom_col(fill=cuisine)
tripadvisor %>% group_by(cuisine) %>% na.omit() %>% summarize(n=n()) %>% arrange(desc(n)) %>% top_n(10) %>% ggplot(aes(cuisine,n)) + geom_col()
tripadvisor %>% group_by(cuisine) %>% na.omit() %>% summarize(n=n()) %>% arrange(desc(n)) %>% top_n(10) # %>% ggplot(aes(cuisine,n)) + geom_col()
tripadvisor %>% group_by(cuisine) %>% na.omit() %>% summarize(n=n()) %>% arrange(desc(n)) %>% top_n(10)
%>% ggplot(aes(x=reorder(cuisine,n),y=n) + geom_col()
tripadvisor %>% group_by(cuisine) %>% na.omit() %>% summarize(n=n()) %>% arrange(desc(n)) %>% top_n(10) %>% ggplot(aes(x=reorder(cuisine,n),y=n) + geom_col()
tripadvisor %>% group_by(cuisine) %>% na.omit() %>% summarize(count=n()) %>% arrange(desc(count)) %>% top_n(10) %>% ggplot(aes(x=reorder(cuisine,count),y=count) + geom_col()
tripadvisor %>% group_by(cuisine) %>% na.omit() %>% summarize(count=n()) %>% arrange(desc(count)) %>% top_n(10) #%>% ggplot(aes(x=reorder(cuisine,count),y=count) + geom_col()
tripadvisor %>% group_by(cuisine) %>% na.omit() %>% summarize(count=n()) %>% arrange(desc(count)) %>% top_n(10) %>% ggplot(aes(x=reorder(cuisine,count),y=count) + geom_col()
tripadvisor %>% group_by(cuisine) %>% na.omit() %>% summarize(count=n()) %>% arrange(desc(count)) %>% top_n(10) %>% ggplot(aes(x=reorder(cuisine,count),y=count) + geom_col(fill=cuisine)
tripadvisor %>% group_by(cuisine) %>% na.omit() %>% summarize(count=n()) %>% arrange(desc(count)) %>% top_n(10) %>% ggplot(aes(x=reorder(cuisine,count),y=count)) + geom_col(fill=cuisine)
tripadvisor %>% group_by(cuisine) %>% na.omit() %>% summarize(count=n()) %>% arrange(desc(count)) %>% top_n(10) %>% ggplot(aes(x=reorder(cuisine,count),y=count)) + geom_col(aes(fill=cuisine))
tripadvisor %>% group_by(cuisine) %>% na.omit() %>% summarize(count=n()) %>% arrange(count) %>% top_n(10) %>% ggplot(aes(x=reorder(cuisine,count),y=count)) + geom_col(aes(fill=cuisine))
tripadvisor %>% group_by(cuisine) %>% na.omit() %>% summarize(count=n()) %>% arrange(desc(count)) %>% top_n(10) %>% ggplot(aes(x=reorder(cuisine,count),y=count)) + geom_col(aes(fill=cuisine))
tripadvisor %>% group_by(cuisine) %>% na.omit() %>% summarize(count=n()) %>% arrange(desc(count)) %>% top_n(10) %>% ggplot(aes(x=reorder(cuisine,-count),y=count)) + geom_col(aes(fill=cuisine))
data(movies)
dataset(movies)
library(movies)
install.packages('movies')
tripadvisor$ranking = as.numeric(tripadvisor$ranking)
ggplot(tripadvisor,aes(num_reviews,ranking))+geom_point()
ggplot(tripadvisor,aes(num_reviews,ranking))+geom_point() + xlim(0,) + ylim(0,)
ggplot(tripadvisor,aes(num_reviews,ranking))+geom_point() + xlim(0,max(xvalues)) + ylim(0,max(yvalues))
ggplot(tripadvisor,aes(num_reviews,ranking))+geom_point() + xlim(0,max(tripadvisor$num_reviews)) + ylim(0,max(tripadvisor$ranking))
ggplot(tripadvisor,aes(num_reviews,ranking))+geom_point()+geom_text(aes(label=ifelse(
ranking<10,name,'')))
length(tripadvisor$cuisine)
unique(length(tripadvisor$cuisine))
length(unique(tripadvisor$cuisine))
ggplot(tripadvisor,aes(num_reviews,ranking))+geom_point()+geom_text(aes(label=ifelse(
ranking<5,name,'')))
ggplot(tripadvisor,aes(num_reviews,ranking))+geom_point()
ggplot(tripadvisor$price) + geom_bar(fill='blue')
data(mpg)
head(mpg)
head(tripadvisor)
ggplot(tripadvisor,aes(price)) + geom_bar(fill='blue')
ggplot(tripadvisor,aes(price)) + geom_bar(fill='blue')+theme_minimal()
ggplot(tripadvisor,aes(price)) + geom_bar(fill='lightblue')+theme_minimal()
ggplot(tripadvisor,aes(price,na.rm=T)) + geom_bar(fill='lightblue')+theme_minimal()
ggplot(tripadvisor,aes(price,na.rm=TRUE)) + geom_bar(fill='lightblue')+theme_minimal()
ggplot(tripadvisor,aes(price,na.omit())) + geom_bar(fill='lightblue')+theme_minimal()
ggplot(tripadvisor,aes(price)) + geom_bar(fill='lightblue')+theme_minimal()
ggplot(tripadvisor,aes(price)) + geom_density()+theme_minimal()
ggplot(tripadvisor,aes(price)) + geom_density()
ggplot(tripadvisor,aes(price)) + geom_freqpoly()
ggplot(tripadvisor,aes(num_reviews)) + geom_freqpoly()
str(tripadvisor)
ggplot(tripadvisor,aes(num_reviews)) + geom_freqpoly()+theme_minimal()
ggplot(tripadvisor,aes(num_reviews)) + geom_histogram()+theme_minimal()
tripadvisor %>% filter(ranking <= quantile(ranking,prob=.1)) %>% group_by(cuisine) %>% na.omit() %>%
summarize(count=n()) %>% arrange(desc(count)) %>% top_n(10) %>%
ggplot(aes(x=reorder(cuisine,-count),y=count)) + geom_col(aes(fill=cuisine))
tripadvisor %>% filter(ranking <= quantile(ranking,prob=.1)) #%>% group_by(cuisine) %>% na.omit() %>%
tripadvisor %>% filter(ranking <= quantile(ranking,prob=.01)) %>% group_by(cuisine) %>% na.omit() %>%
summarize(count=n()) %>% arrange(desc(count)) %>% top_n(10) %>%
ggplot(aes(x=reorder(cuisine,-count),y=count)) + geom_col(aes(fill=cuisine))
ggplot(tripadvisor,aes(num_reviews,ranking))+geom_point()
ggplot(tripadvisor,aes(num_reviews,ranking))+geom_density()
ggplot(tripadvisor,aes(num_reviews,ranking))+geom_density2d()
tripadvisor %>% group_by(cuisine) %>% arrange(ranking)
tripadvisor %>% group_by(cuisine) %>% arrange(ranking) %>% top_n(1)
tripadvisor %>% group_by(cuisine) %>% count() %>% arrange(n) %>% top_n(1)
View(tripadvisor %>% group_by(cuisine) %>% arrange(ranking) %>% top_n(1))
View(tripadvisor %>% group_by(cuisine) %>% arrange(desc(ranking)) %>% top_n(1))
View(tripadvisor %>% group_by(cuisine) %>% arrange(ranking) %>% top_n(1))
View(tripadvisor %>% group_by(cuisine) %>% arrange(ranking)) #%>% top_n(1))
View(tripadvisor %>% group_by(cuisine) %>% arrange(ranking)) #%>% top_n(1))
View(tripadvisor %>% group_by(cuisine) %>% summarize(first(ranking))) #%>% top_n(1))
View(tripadvisor %>% group_by(cuisine) %>% summarize(first(ranking)) %>% join(tripadvisor, by=ranking))
View(tripadvisor %>% group_by(cuisine) %>% summarize(first(ranking)) %>% inner_join(tripadvisor, by=ranking))
View(tripadvisor %>% group_by(cuisine) %>% summarize(first(ranking)) %>% inner_join(tripadvisor, by='ranking'))
View(tripadvisor %>% group_by(cuisine) %>% summarize(first(ranking))# %>% inner_join(tripadvisor, by='ranking'))
# There are 49 types of cuisine represented in this dataset; what's the highest ranked restaurant in each of them?
# and what are some of the esoteric cuisine types for those adventurous eaters?
tripadvisor %>% group_by(cuisine) %>% count() %>% arrange(n) %>% top_n(1)
View(tripadvisor %>% group_by(cuisine) %>% summarize(first(ranking))# %>% inner_join(tripadvisor, by='ranking'))
View(tripadvisor %>% group_by(cuisine) %>% summarize(first(ranking)))# %>% inner_join(tripadvisor, by='ranking'))
View(tripadvisor %>% group_by(cuisine) %>% summarize(first(ranking)))
View(tripadvisor %>% group_by(cuisine) %>% summarize(ranking=first(ranking)))
View(tripadvisor %>% group_by(cuisine) %>% summarize(ranking=first(ranking))) %>% inner_join(tripadvisor, by='ranking'))
View(tripadvisor %>% group_by(cuisine) %>% summarize(ranking=first(ranking)) %>% inner_join(tripadvisor, by='ranking'))
View(tripadvisor %>% group_by(cuisine) %>% summarize(ranking=first(ranking)) %>% inner_join(tripadvisor, by='ranking') %>% arrange(ranking))
tripadvisor = read_csv('reviews.csv', stringsasFactors=F)
View(tripadvisor %>% group_by(cuisine) %>% summarize(ranking=first(ranking)) %>% inner_join(tripadvisor, by='ranking') %>% arrange(ranking)) %>% select(name,ranking)
View(tripadvisor %>% group_by(cuisine) %>% summarize(ranking=first(ranking)) %>% inner_join(tripadvisor, by='ranking') %>% arrange(ranking) %>% select(name,ranking))
View(tripadvisor %>% group_by(cuisine) %>% summarize(ranking=first(ranking)) %>% inner_join(tripadvisor, by='ranking') %>% arrange(ranking) %>% select(name,cuisine,ranking,price))
View(tripadvisor %>% group_by(cuisine) %>% summarize(ranking=first(ranking)) %>% inner_join(tripadvisor, by='ranking') %>% arrange(ranking) %>% select(name,cuisine.x,ranking,price) %>% rename('cuisine.x'='cuisine'))
View(tripadvisor %>% group_by(cuisine) %>% summarize(ranking=first(ranking)) %>% inner_join(tripadvisor, by='ranking') %>%
arrange(ranking)# %>% select(name,cuisine.x,ranking,price) %>% rename('cuisine.x'='cuisine'))
View(tripadvisor %>% group_by(cuisine) %>% summarize(ranking=first(ranking)) %>% inner_join(tripadvisor, by='ranking') %>%
arrange(ranking))# %>% select(name,cuisine.x,ranking,price) %>% rename('cuisine.x'='cuisine'))
View(tripadvisor %>% group_by(cuisine) %>% summarize(ranking=first(ranking)) %>% inner_join(tripadvisor, by='ranking') %>% arrange(ranking)) # %>% select(name,cuisine.x,ranking,price) %>% rename('cuisine.x'='cuisine'))
View(tripadvisor %>% group_by(cuisine) %>% summarize(ranking=first(ranking)) %>% inner_join(tripadvisor, by='ranking') %>%
arrange(ranking) %>% select(name,cuisine.x,ranking,price) %>% rename('cuisine.x'='cuisine'))
View(tripadvisor %>% group_by(cuisine) %>% summarize(ranking=first(ranking)) %>% inner_join(tripadvisor, by='ranking') %>%
arrange(ranking) %>% rename('cuisine.x'='cuisine'))  %>% select(name,cuisine.x,ranking,price)
View(tripadvisor %>% group_by(cuisine) %>% summarize(ranking=first(ranking)) %>% inner_join(tripadvisor, by='ranking') %>%
arrange(ranking) %>% rename('cuisine.x'='cuisine') %>% select(name,cuisine.x,ranking,price))
View(tripadvisor %>% group_by(cuisine) %>% summarize(ranking=first(ranking)) %>% inner_join(tripadvisor, by='ranking') %>%
arrange(ranking) %>% rename('cuisine.x'='cuisine')) # %>% select(name,cuisine.x,ranking,price))
View(tripadvisor %>% group_by(cuisine) %>% summarize(ranking=first(ranking)) %>% inner_join(tripadvisor, by='ranking') %>%
arrange(ranking) %>% rename(,'cuisine.x'='cuisine')) # %>% select(name,cuisine.x,ranking,price))
View(tripadvisor %>% group_by(cuisine) %>% summarize(ranking=first(ranking)) %>% inner_join(tripadvisor, by='ranking') %>%
arrange(ranking) #%>% rename('cuisine.x'='cuisine')) # %>% select(name,cuisine.x,ranking,price))
View(tripadvisor %>% group_by(cuisine) %>% summarize(ranking=first(ranking)) %>% inner_join(tripadvisor, by='ranking') %>%
arrange(ranking)) #%>% rename('cuisine.x'='cuisine')) # %>% select(name,cuisine.x,ranking,price))
View(tripadvisor %>% group_by(cuisine) %>% summarize(ranking=first(ranking)) %>% right_join(tripadvisor, by='ranking') %>%
arrange(ranking)) #%>% rename('cuisine.x'='cuisine')) # %>% select(name,cuisine.x,ranking,price))
View(tripadvisor %>% group_by(cuisine) %>% summarize(ranking=first(ranking)) %>% inner_join(tripadvisor, by='ranking') %>%
arrange(ranking)) #%>% rename('cuisine.x'='cuisine')) # %>% select(name,cuisine.x,ranking,price))
best_res %>% rename('cuisine.x'='cuisine')) # %>% select(name,cuisine.x,ranking,price))
best_res %>% rename('cuisine.x'='cuisine') # %>% select(name,cuisine.x,ranking,price))
best_res=tripadvisor %>% group_by(cuisine) %>% summarize(ranking=first(ranking)) %>% inner_join(tripadvisor, by='ranking') %>% arrange(ranking)
best_res %>% rename('cuisine.x'='cuisine') # %>% select(name,cuisine.x,ranking,price))
best_res$cuisine.x=rename(best_res$cuisine.x='cuisine') # %>% select(name,cuisine.x,ranking,price))
best_res=tripadvisor %>% group_by(cuisine) %>% summarize(ranking=first(ranking)) %>% inner_join(tripadvisor) %>% arrange(ranking)
best_res
best_res = best_res[c(3,1,2,4,5,6)]
best_res
total_best = tripadvisor %>% arrange(ranking) %>% top_n(25)
total_best
total_best = tripadvisor %>% arrange(desc(ranking)) %>% top_n(25)
total_best
total_best = tripadvisor %>% arrange(desc(ranking))
total_best
total_best = tripadvisor %>% arrange(ranking)
total_best
total_best = tripadvisor %>% arrange(ranking) %>% top_n(25)
total_best
total_best = tripadvisor %>% arrange(ranking) %>% top_n(x=ranking,25)
total_best = tripadvisor %>% arrange(ranking) %>% top_n(x=ranking,n=25)
total_best = tripadvisor %>% arrange(ranking) %>% top_n(wt=ranking,n=25)
total_best
total_best = tripadvisor %>% filter(ranking <=25)
total_best
